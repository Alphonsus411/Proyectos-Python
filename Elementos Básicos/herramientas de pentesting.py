# importa librerias de python para pentesting
import socket

# inicia saludo
print("Hola, bienvenido al programa de pentesting")
# inicia navegación
while True:
    print("")
    print("¿Qué quieres hacer?")
    print("1. Crear una conexión")
    print("2. Crear una conexión con un proxy")
    print("3. Crear una conexión con un proxy y una contraseña")
    print("4. Crear una conexión con un proxy, una contraseña y una dirección")
    print("5. Crear una conexión con un proxy, una contraseña y una dirección y un puerto")
    print("6. Obtener la clave Wifi de una conexión")
    print("7. Almacenar la clave Wifi en un archivo de texto")
    print("7. Cifrar mi señal")
    print("8. Descifrar mi señal")
    print("9. Salir")
    print("")
    opcion = input("Elige una opción: ")
    if opcion == "1":
        print("")
        print("Creando conexión")
        print("")
        host = input("Introduce el host: ")
        port = input("Introduce el puerto: ")
        try:
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            s.connect((host, int(port)))
            print("Conexión establecida")
            s.close()
        except:
            print("Error al crear la conexión")
    elif opcion == "2":
        print("")
        print("Creando conexión con un proxy")
        print("")
        host = input("Introduce el host: ")
        port = input("Introduce el puerto: ")
        proxy = input("Introduce el proxy: ")
        socks = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        try:
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            s.connect((host, int(port)))
            s.setproxy(socks.PROXY_TYPE_SOCKS5, proxy)
            s.connect((host, int(port)))
            print("Conexión establecida")
            s.close()
        except:
            print("Error al crear la conexión")
    elif opcion == "3":
        print("")
        print("Creando conexión con un proxy y una contraseña")
        print("")
        host = input("Introduce el host: ")
        port = input("Introduce el puerto: ")
        proxy = input("Introduce el proxy: ")
        password = input("Introduce la contraseña: ")
        try:
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            s.connect((host, int(port)))
            s.setproxy(socks.PROXY_TYPE_SOCKS5, proxy, username=password)
            s.connect((host, int(port)))
            print("Conexión establecida")
            s.close()
        except:
            print("Error al crear la conexión")
    elif opcion == "4":
        print("")
        print("Creando conexión con un proxy, una contraseña y una dirección")
        print("")
        host = input("Introduce el host: ")
        port = input("Introduce el puerto: ")
        proxy = input("Introduce el proxy: ")
        password = input("Introduce la contraseña: ")
        address = input("Introduce la dirección: ")
        try:
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            s.connect((host, int(port)))
            s.setproxy(socks.PROXY_TYPE_SOCKS5, proxy, username=password, rdns=True)
            s.connect((address, int(port)))
            print("Conexión establecida")
            s.close()
        except:
            print("Error al crear la conexión")
    elif opcion == "5":
        print("")
        print("Creando conexión con un proxy, una contraseña y una dirección y un puerto")
        print("")
        host = input("Introduce el host: ")
        port = input("Introduce el puerto: ")
        proxy = input("Introduce el proxy: ")
        password = input("Introduce la contraseña: ")
        address = input("Introduce la dirección: ")
        port = input("Introduce el puerto: ")
        try:
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            s.connect((host, int(port)))
            s.setproxy(socks.PROXY_TYPE_SOCKS5, proxy, username=password, rdns=True)
            s.connect((address, int(port)))
            print("Conexión establecida")
            s.close()
        except:
            print("Error al crear la conexión")
    elif opcion == "6":
        print("")
        print("Obteniendo la clave Wifi de una conexión")
        print("")
        host = input("Introduce el host: ")
        port = input("Introduce el puerto: ")
        try:
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            s.connect((host, int(port)))
            s.send(b"GET / HTTP/1.1\r\nHost: " + host.encode() + b"\r\n\r\n")
            data = s.recv(1024)
            print(data.decode())
            s.close()
        except:
            print("Error al crear la conexión")
    elif opcion == "7":
        print("")
        print("Almacenando la clave Wifi en un archivo de texto")
        print("")
        host = input("Introduce el host: ")
        port = input("Introduce el puerto: ")
        try:
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            s.connect((host, int(port)))
            s.send(b"GET / HTTP/1.1\r\nHost: " + host.encode() + b"\r\n\r\n")
            data = s.recv(1024)
            print(data.decode())
            s.close()
        except:
            print("Error al crear la conexión")
    elif opcion == "8":
        print("")
        print("Cifrando mi señal")
        print("")
        host = input("Introduce el host: ")
        port = input("Introduce el puerto: ")
        try:
            s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
            s.connect((host, int(port)))
            s.send(b"GET / HTTP/1.1\r\nHost: " + host.encode() + b"\r\n\r\n")
            data = s.recv(1024)
            print(data.decode())
            s.close()
        except:
            print("Error al crear la conexión")
    elif opcion == "9":  # Salir
        print("")
        print("Saliendo del programa")
